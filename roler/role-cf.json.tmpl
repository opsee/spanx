{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The Opsee role stack for cross-account access",
  "Mappings": {
    "ServiceTokenMap": {
      "eu-east-1": { "ServiceToken": "arn:aws:sns:us-east-1:933693344490:opsee-cfn-callback" },
      "us-west-1": { "ServiceToken": "arn:aws:sns:us-west-1:933693344490:opsee-cfn-callback" },
      "us-west-2": { "ServiceToken": "arn:aws:sns:us-west-2:933693344490:opsee-cfn-callback" },
      "eu-west-1": { "ServiceToken": "arn:aws:sns:us-west-1:933693344490:opsee-cfn-callback" },
      "eu-central-1": { "ServiceToken": "arn:aws:sns:eu-central-1:933693344490:opsee-cfn-callback" },
      "ap-northeast-1": { "ServiceToken": "arn:aws:sns:ap-northeast-1:933693344490:opsee-cfn-callback" },
      "ap-northeast-2": { "ServiceToken": "arn:aws:sns:ap-northeast-2:933693344490:opsee-cfn-callback" },
      "ap-southeast-1": { "ServiceToken": "arn:aws:sns:ap-southeast-1:933693344490:opsee-cfn-callback" },
      "ap-southeast-2": { "ServiceToken": "arn:aws:sns:ap-southeast-2:933693344490:opsee-cfn-callback" },
      "sa-east-1": { "ServiceToken": "arn:aws:sns:us-east-1:933693344490:opsee-cfn-callback" }
    }
  },
  "Resources": {
    "OpseeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "AWS": "933693344490"
            },
            "Action": "sts:AssumeRole",
            "Condition": {
              "StringEquals": {
              "sts:ExternalId": "{{ .ExternalID }}"
              }
            }
          }]
        },
        "Policies": [{
          "PolicyName": "opsee-policy",
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "autoscaling:DescribeAccountLimits",
                "autoscaling:DescribeAdjustmentTypes",
                "autoscaling:DescribeAutoScalingNotificationTypes",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:DescribeLifecycleHookTypes",
                "autoscaling:DescribeMetricCollectionTypes",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScalingProcessTypes",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeTags",
                "autoscaling:DescribeTerminationPolicyTypes",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeLoadBalancers",
                "autoscaling:CreateLaunchConfiguration",
                "autoscaling:DeleteLaunchConfiguration",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "cloudfront:ListDistributions",
                "cloudfront:ListStreamingDistributions",
                "cloudfront:GetDistribution",
                "cloudfront:GetDistributionConfig",
                "cloudfront:GetStreamingDistribution",
                "cloudfront:GetStreamingDistributionConfig",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeImageAttribute",
                "ec2:DescribeImages",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcs",
                "ec2:ReportInstanceStatus",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:RebootInstances",
                "ec2:RunInstances",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances",
                "ecs:DeregisterTaskDefinition",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListClusters",
                "ecs:ListContainerInstances",
                "ecs:ListServices",
                "ecs:ListTaskDefinitionFamilies",
                "ecs:ListTaskDefinitions",
                "ecs:ListTasks",
                "ecs:RegisterTaskDefinition",
                "ecs:RunTask",
                "ecs:StartTask",
                "ecs:StopTask",
                "ecs:UpdateService",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "rds:CreateEventSubscription",
                "rds:DescribeAccountAttributes",
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "rds:DescribeDBLogFiles",
                "rds:DescribeDBSecurityGroups",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeDBClusterParameterGroups",
                "rds:DescribeDBClusterParameters",
                "rds:DescribeDBEngineVersions",
                "rds:DescribeDBParameterGroups",
                "rds:DescribeDBParameters",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBSnapshotAttributes",
                "rds:DescribeEvents",
                "rds:DescribePendingMaintenanceActions",
                "route53:GetHostedZone",
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
                "route53domains:GetDomainDetail",
                "route53domains:ListDomains",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:Publish"
              ],
              "Resource": "*"
            }, {
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:ListStackResources",
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:UpdateStack"
              ],
              "Resource": [
                "arn:aws:cloudformation:*:*:stack\/opsee-stack-*"
              ]
            }, {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::opsee-bastion-cf\/*"
            }]
          }
        }]
      }
    },
    "OpseeNotification": {
      "Type": "Custom::OpseeNotificationResource",
      "Version": "1.0",
      "DependsOn": "OpseeRole",
      "Properties": {
        "ServiceToken": { "Fn::FindInMap": ["ServiceTokenMap", { "Ref": "AWS::Region" }, "ServiceToken"] },
        "RoleExternalID": "{{ .ExternalID }}",
        "RoleARN": { "Fn::GetAtt": [ "OpseeRole", "Arn" ] },
        "StackID": { "Ref": "AWS::StackId" },
        "StackName": { "Ref": "AWS::StackName" },
				"Region": { "Ref": "AWS::Region" }
      }
    }
  }
}
